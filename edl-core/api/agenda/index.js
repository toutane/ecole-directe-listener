const mongoose = require("mongoose");
const fetch = require("node-fetch");

const keys = require("../../.config/keys");
const Listens = require("../../model/listen-model");

mongoose.connect(keys.mongodb.dbURI, () => {
  console.log("connected to mongodb");
});

module.exports = (req, res) => {
  getListen(req.query, res);
  // fetchAgenda(JSON.parse(req.query.params), "ddd", res);
};

async function getListen(query, res) {
  let params = JSON.parse(query.params);
  Listens.find({ shortId: params.shortId }).then((data) => {
    fetchAgenda(params, data[0].tokenEd, res);
  });
  // let result = await response.json();
  // res.send(result.cronId);
  // sendNotification(params, params.eleveId, res);
  // sendNotification(params, result.cronId, res);
  // fetchAgenda(params, params.shortId, res);
}

async function fetchAgenda(query, tokenEd, res) {
  let url = "https://api.ecoledirecte.com";
  let data = `data={ "token": "${tokenEd}" }`;
  // let data = `data={ "token": "55445a6e574552695153743356314272533035754b3167355630704d635339365a55644a4e46684b54466831526c42495a3146524e574a4257444671513052305757644d57533948536e56704d6c426e0d0a52476858616c647857485242636d68315932524a546b52424d6c634e436d39556558453562585531524756766332644d53564e6d4e6e6c794e6b6845593346334e43394b4e486c6b65455635526e4d7a0d0a5655685163584e58646b6f305a6a6334546a4532644459765546426a6244563152326733596a4a6f59566c4d645564366147316c526e5235445170754d7a6b79626a5a4f61324979536c4d7a4c3351790d0a5544526151334d77556b5243576c4e525545567a4d3031444f574a754d6b4e3355553543616d464f564574564f44683061305a6c646c6c435a7a5a35593370465a6e6c48646e6c30563352544d4855320d0a4d5564566251304b51323546656e427a55457877516e4a6862486f7857484978646d744456304a53636e46305a58413154454e73655574524c33687356304653616e6c34553370324e306835635455330d0a55315a345332526e4b326c6e64464a504e5539684e56686f576b6334535668435558554e436a6c4355553136616b4630534770495545354e5a6e51345547744f616c6f31643156734d7a5a4f655373760d0a4d316b78655668745344684b546d644f633151355748567152326f795630524d576d31506543387952474e315530464e5545526a4d3264445955467852327076445170305a6a424864575579525531750d0a5556453553557868533256736331524957464d7255574e4e545731735333704755553161636d465a6231644c59337054636c707a5a6b5249646e644263315256566a5670563039335158644f576974580d0a566c564664544e6e4d4756475567304b634552594e6c703664574e7554556842557a4e4d59327431655446774b7a45785744566b576a466d4d6a42434f56566956323957634564704b314a4c4d5570700d0a4e46684b626d6c59516d314252487071523046524f586f725333684b656c706b537a46555533564764336b4e436b4654634652554e466f77546b3574626b7732545452354d69745157484278625768510d0a65564578616e426e53487068627a4e3356556331656e70584e6d567859316474516c424955306f7864314a71566939765531467664793957536b68576247747261324e544f4770594451704b643364550d0a52457830595535454d325a33654535365a31705664564258517a4a6c525463775244464f4e69396a6148644a636b4d35616e4246635664475a31464d4d6b6c4a576d354456484e534e323936576d35490d0a52336879534774436355644a534868455545466a5967304b51314a47646a4a76616b647a5a3078494f445a6f534849794e30315355314676516e5252523046614e455a32536e4649643268464e4755790d0a563074305545563261486c51656c5657654646504d54684656334e54596c5a465246463251576433516d4d7856334e715933454e436e6c48626c4d34646a524f4e574d325632637961555a4753446c4b0d0a546d6f795758645a5a58706a56464e594f477047543152444e5731495546523265584a6b4d454e44624856324e334d3352485a4a576c467752437461616b566c4d546850596d31434d4849774f474e4c0d0a44516f3556486b7a6255394a56327036655455356347747364474e4f6346707a57565a6e596b566c4f4670615244687964486442626e566f5331524b643256344d6c55304e6e64354d323544613073330d0a546c63315a47465a5469737a595849355647524b4f4464744e4646715277304b595646456341" }`;

  let response = await fetch(
    `${url}/v3/Eleves/${query.eleveId}/cahierdetexte.awp?verbe=get&`,
    {
      method: "POST",
      headers: {
        "Content-Type": "application/edn",
      },
      body: data,
    }
  );
  let result = await response.json();
  sendNotification(query, JSON.stringify(result.data), res);
  // res.send(result);
  // result.code === 200 && (await items.push(Object.keys(result.data).length));
  // items.length !== 0 && sendNotification(query, items.length, res);
  // items[items.length - 1] !== Object.keys(result.data).length, items.shift();
}

async function sendNotification(query, value, res) {
  let url = `https://edl-core.toutane.now.sh`;
  // let url = `http://192.168.86.183:3000`;
  let response = await fetch(
    `${url}/api/notif?eleveId=${query.eleveId}&body=${value}`,
    {
      method: "GET",
      headers: {
        "Content-Type": "application/edn",
      },
    }
  );
  let result = await response.json();
  res.send(result);
}
